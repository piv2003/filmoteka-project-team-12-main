{"mappings":"qhBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sJCAzD,IAAAC,EAAAJ,EAAA,SCEA,MAAMK,EAAc,6NAGRC,ECLK,IAAAC,IAAoBP,EAAA,SAAAQ,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,gEDc5F,SAASC,IACaC,SAASC,cAAc,kBAE/BC,UAAYX,C,CDd1B,MAAMY,EAAaH,SAASC,cAAc,gBACpCG,EAAWJ,SAASC,cAAc,cAClCI,EAAYL,SAASC,cAAc,kBAK1B,SAAAK,IACb,MAAMC,EAAYC,aAAaC,QAAQ,kBACjCC,EAAiBtB,KAAKC,MAAMkB,GAGlC,GAFAJ,EAAWQ,UAAUC,IAAI,uBACzBR,EAASO,UAAUE,OAAO,uBACrBH,GAA4C,IAA1BA,EAAeI,OAE/B,CACL,MAAMC,GAAe,EAAAzB,EAAA0B,SAAYN,GACjCL,EAAUH,UAAYa,C,MAHtBhB,G,CATJI,EAAWc,iBAAiB,QAASX,GGPrChB,EAAAJ,EAAA,SAGA,MAAMgC,EAAUlB,SAASC,cAAc,kBACjCkB,EAAanB,SAASC,cAAc,gBACpCmB,EAAWpB,SAASC,cAAc,cAGzB,SAAAoB,IACb,MAAMC,EAAelC,KAAKC,MAAMmB,aAAaC,QAAQ,kBAErDU,EAAWR,UAAUE,OAAO,uBAC5BO,EAAST,UAAUC,IAAI,uBAElBU,GAAwC,IAAxBA,EAAaR,OAIjCI,EAAQhB,WAAY,EAAAZ,EAAA0B,SAAYM,GAH/BvB,G,CARJqB,EAASH,iBAAiB,QAASI,G,mBCPnCE,EAAiB,IAAA9B,IAAoBP,EAAA,SAAAQ,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCM1E,IAAd0B,EAAgBpC,KAAKC,MAAMmB,aAAaC,QAAQ,mBACpD,MAAMgB,EAAWzB,SAASC,cAAc,gBAClCyB,EAAW1B,SAASC,cAAc,gBA0JZ,SAAnB0B,IACP,MAAMC,EAAQxC,KAAKC,MAAMmB,aAAaC,QAAQ,UAExCoB,EAAUD,EAAME,SAAQC,GAAMA,EAAGC,KACjCC,EAAYL,EAAME,SAAQC,GAAMA,EAAGG,OAMzC,OALiBL,EAAQM,QACvB,CAACC,EAAKJ,EAAIK,KAAO,IAAKD,EAAKJ,CAACA,GAAKC,EAAUI,MAC3C,G,CA/JJZ,EAASR,iBAAiB,SAIjB,WAGP,OAFAO,EAAgBpC,KAAKC,MAAMmB,aAAaC,QAAQ,kBAEzCe,C,IANTE,EAAST,iBAAiB,SASjB,WAGP,OAFAO,EAAgBpC,KAAKC,MAAMmB,aAAaC,QAAQ,mBAChD6B,QAAQC,IAAIf,GACLA,C,IAIsB,WAC7B,MAAMgB,EAAO,CACXC,cAAezC,SAASC,cAAc,sBACtCyC,MAAO1C,SAASC,cAAc,gBAC9B0C,eAAgB3C,SAASC,cAAc,qBAGzCuC,EAAKC,cAAcxB,iBAAiB,SACpC,SAAmB2B,GACjB5C,SAAS6C,KAAKC,MAAMC,SAAW,SAC/B,MAAMC,EAAWJ,EAAIK,OAAOC,QAAQ,oBACpC,IAAKF,EACH,OAEFR,EAAKE,MAAM/B,UAAUwC,OAAO,aAE5BC,OAAOnC,iBAAiB,UAAWoC,GAET,MAApBC,EAASC,OAAOP,EAASQ,QAAQxB,IAGjCyB,EAAcjC,EAAckC,MAAK,EAAC1B,GAAEA,KAASA,IAAOsB,KAGpC,WAEa,MAA3BK,EAAYF,EAAYG,UACxBC,EAAYlC,IAClB,IAAImC,EAAa,GACjBH,EAAUI,KAAIhC,GAAM+B,EAAWE,KAAKH,EAAU9B,MAIZ,IAA9BkC,EAAUR,EAAYS,YAEtB,kCAAkCT,EAAYS,cAD9C1E,EAAA+B,GAGJ,MAAM4C,EAAQV,EAAYU,MACpBC,EAAOb,OAAOE,EAAYY,cAAcC,QAAQ,GAChDC,EAAQd,EAAYe,WACpBC,EAAalB,OAAOE,EAAYgB,YAAYH,QAAQ,GAC1D,IAAI1C,EAAQkC,EAAWY,KAAK,MACvB9C,IACHA,EAAQ,kBAEV,IAAI+C,EAAQlB,EAAYmB,SACnBD,IACHA,EAAQ,mCAGV,MAAME,EAAS,6FAGDZ,yBACAE,+KAMmBA,yMAKKC,yGAECG,0LAKRE,yPAM6BN,gPAMAvC,8PASjD+C,wRASXnC,EAAKG,eAAezC,UAAY2E,C,EAElCC,IACA,EAAAC,EAAA/D,SAAoByC,E,IAGxBuB,GAGsB,WACpB,MAAMxC,EAAO,CACXyC,cAAejF,SAASC,cAAc,sBACtCyC,MAAO1C,SAASC,cAAc,iBAGhCuC,EAAKyC,cAAchE,iBAAiB,SACpC,WACEqB,QAAQC,IAAI,SACZvC,SAAS6C,KAAKC,MAAMC,SAAW,OAC3BtB,EAASd,UAAUuE,SAAS,wBAC9B7D,IAEEK,EAASf,UAAUuE,SAAS,wBAC9B5E,IAGFkC,EAAKE,MAAM/B,UAAUwC,OAAO,Y,IAE9BC,OAAO+B,oBAAoB,UAAW9B,E,CAExC+B,GAeAzD,IAoBA,SAAS0B,EAAiBgC,GAExBrF,SAAS6C,KAAKC,MAAMC,SAAW,OACZ,WAAfsC,EAAMC,OACRtF,SAASC,cAAc,gBAAgBU,UAAUwC,OAAO,aACxDb,QAAQC,IAAI,SACRd,EAASd,UAAUuE,SAAS,wBAC9B7D,IAEEK,EAASf,UAAUuE,SAAS,wBAC9B5E,IAEF8C,OAAO+B,oBAAoB,UAAW9B,G,CA7BzBrD,SAASC,cAAc,aAC/BgB,iBAAiB,SAC1B,SAAyBoE,GACnBA,EAAME,gBAAkBF,EAAMpC,SAChCjD,SAAS6C,KAAKC,MAAMC,SAAW,OAC/B/C,SAASC,cAAc,gBAAgBU,UAAUwC,OAAO,aAEpD1B,EAASd,UAAUuE,SAAS,wBAC9B7D,IAEEK,EAASf,UAAUuE,SAAS,wBAC9B5E,KAGJ8C,OAAO+B,oBAAoB,UAAW9B,E,0BC9LxC/C","sources":["node_modules/@parcel/runtime-js/lib/runtime-982cfb96678ad9d6.js","src/js/page-watched.js","src/js/picture-not-found.js","node_modules/@parcel/runtime-js/lib/runtime-3293e3a759f98b18.js","src/js/page-queued.js","node_modules/@parcel/runtime-js/lib/runtime-193d11f9275e5374.js","src/js/queue-watched-modal.js","src/library.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"library.79dd1b23.js\\\",\\\"bM4YN\\\":\\\"poster-plug.77123679.png\\\",\\\"5W5ZI\\\":\\\"zdun.5b228a39.png\\\"}\"));","import cardsMarkup from '../js/cards-markup';\nimport { filmsNotFoundTwo } from '../js/picture-not-found';\n\nconst btnWatched = document.querySelector('#watched-btn');\nconst btnQueue = document.querySelector('#queue-btn');\nconst sectionEl = document.querySelector('.films-catalog');\n\nbtnWatched.addEventListener('click', addWatchedMarkup);\n\n\nexport default function addWatchedMarkup() {\n  const markupArr = localStorage.getItem('watched-movies');\n  const markupArrParse = JSON.parse(markupArr);\n  btnWatched.classList.add('library_btn--active');\n  btnQueue.classList.remove('library_btn--active');\n  if (!markupArrParse || markupArrParse.length === 0) {\n    filmsNotFoundTwo();\n  } else {\n    const strokeMarkup = cardsMarkup(markupArrParse);\n    sectionEl.innerHTML = strokeMarkup;\n  }\n  }\n","import zhdun from '../images/waiting/zdun.png';\n\nconst imgNotFound = `<div class='not-found_container'>\n<h2 class=\"library_not-found-text\">Are you serious? No movies have been added yet. \nOk, I'll wait. </br><a href=\"./index.html\" class=\"link_to-home\">Go home page.</a></h1>\n<img src=\"${zhdun}\" width=\"400px\" class='img_not-found'>\n    </div>`;\n\nfunction filmsNotFound() {\n  const containerEl = document.querySelector('.container-catalog');\n\n  containerEl.innerHTML = imgNotFound;\n}\n\nfunction filmsNotFoundTwo() {\n  const containerEl = document.querySelector('.films-catalog');\n\n  containerEl.innerHTML = imgNotFound;\n}\n\nexport { filmsNotFound, filmsNotFoundTwo };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5W5ZI\")).toString();","import cardsMarkup from '../js/cards-markup';\nimport { filmsNotFoundTwo } from '../js/picture-not-found';\n\nconst library = document.querySelector('.films-catalog');\nconst watchedBtn = document.querySelector(`#watched-btn`);\nconst queueBtn = document.querySelector(`#queue-btn`);\n\nqueueBtn.addEventListener('click', addQueuedMarkup);\nexport default function addQueuedMarkup() {\n  const queuedMovies = JSON.parse(localStorage.getItem('queued-movies'));\n\n  watchedBtn.classList.remove('library_btn--active');\n  queueBtn.classList.add('library_btn--active');\n\n  if (!queuedMovies || queuedMovies.length === 0) {\n    filmsNotFoundTwo();\n    return;\n  }\n   library.innerHTML = cardsMarkup(queuedMovies);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bM4YN\")).toString();","import addQueuedMarkup from './page-queued.js';\nimport addWatchedMarkup from './page-watched.js';\nimport localStorageLibrary from './modalBtns.js';\nimport posterPlug from '../images/utility-images/poster-plug.png';\n// Получение объекта из localStorage\n\nlet currentMovies = JSON.parse(localStorage.getItem('watched-movies'));\nconst queueBtn = document.querySelector('[data-queue]');\nconst watchBtn = document.querySelector('[data-watch]');\n\nqueueBtn.addEventListener('click', addQueueJson);\nwatchBtn.addEventListener('click', addWatchJson);\n\n// Парс если в queue\nfunction addQueueJson() {\n  currentMovies = JSON.parse(localStorage.getItem('queued-movies'));\n  //console.log(currentMovies);\n  return currentMovies;\n}\n// Парс если в watch\nfunction addWatchJson() {\n  currentMovies = JSON.parse(localStorage.getItem('watched-movies'));\n  console.log(currentMovies);\n  return currentMovies;\n}\n\n// <!-- функция открытия и разметки модалки\nfunction modalOpen() {\n  const refs = {\n    openModalCard: document.querySelector('.container-catalog'),\n    modal: document.querySelector('[data-modal]'),\n    modalContainer: document.querySelector('.modal-container'),\n  };\n\n  refs.openModalCard.addEventListener('click', openModal);\n  function openModal(evt) {\n    document.body.style.overflow = 'hidden';\n    const filmCard = evt.target.closest('.film-card__link');\n    if (!filmCard) {\n      return;\n    }\n    refs.modal.classList.toggle('is-hidden');\n\n    window.addEventListener('keydown', onEscapeKeyPress);\n    // получение id  по нажатому объекту\n    const filmId = Number(filmCard.dataset.id);\n    //console.log(filmId);\n\n    const currentFilm = currentMovies.find(({ id }) => id === filmId);\n\n    // ФУНКЦИЯ РАЗМЕТКИ МОДАЛКИ\n    function modalMarkup() {\n      //  формирование массива жанров карточки :\n      const genresArr = currentFilm.genre_ids;\n      const genresObj = addGenre();\n      let genresFilm = [];\n      genresArr.map(el => genresFilm.push(genresObj[el]));\n\n      // Подстановка данных в шаблонный рядок модалки\n      // если нет картинки на постере, то заглушка\n      let imgUrl = !currentFilm.poster_path\n        ? posterPlug\n        : `https://image.tmdb.org/t/p/w500${currentFilm.poster_path}`;\n\n      const title = currentFilm.title;\n      const vote = Number(currentFilm.vote_average).toFixed(1);\n      const votes = currentFilm.vote_count;\n      const popularity = Number(currentFilm.popularity).toFixed(1);\n      let genre = genresFilm.join(', ');\n      if (!genre) {\n        genre = 'no information';\n      }\n      let about = currentFilm.overview;\n      if (!about) {\n        about = 'no information, but coming soon';\n      }\n\n      const markup = `<div class=\"img-box\">\n           <img\n             class=\"img-modal\"\n             src=\"${imgUrl}\"\n             alt=\"${title}\"\n             width=\"240px\"\n           />\n         </div>\n         <div class=\"content-box\">\n           <div class=\"text-box\">\n             <h2 class=\"modal-title\">${title}</h2>\n             <table>\n               <tbody class=\"tbody\">\n                 <tr>\n                   <td class=\"tbody-category\">Vote / Votes</td>\n                   <td class=\"tbody-vote\">${vote}</td>\n                   <td class=\"tbody-slash\">/</td>\n                   <td class=\"tbody-votes\">${votes}</td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Popularity</td>\n                   <td colspan=\"4\">${popularity}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Original Title</td>\n                   <td class=\"tbody-category__text\" colspan=\"4\">${title}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Genre</td>\n                   <td class=\"tbody-category__text\" colspan=\"4\">${genre}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n               </tbody>\n             </table>\n      \n             <h3 class=\"modal-subtitle\">About</h3>\n             <p class=\"textAbout\">\n               ${about}\n             </p>\n           </div>\n           <div class=\"btn-container\">\n             <button class=\"js-toWatched btn-click-modal\">add to watched</button>\n             <button class=\"js-toQueue btn-click-modal\">add to queue</button>\n           </div>\n         </div>`;\n\n      refs.modalContainer.innerHTML = markup;\n    }\n    modalMarkup();\n    localStorageLibrary(currentFilm);\n  }\n}\nmodalOpen();\n\n// Функция закрытия модалки\nfunction modalClose() {\n  const refs = {\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  function toggleModal() {\n    console.log('close');\n    document.body.style.overflow = 'auto';\n    if (queueBtn.classList.contains('library_btn--active')) {\n      addQueuedMarkup();\n    }\n    if (watchBtn.classList.contains('library_btn--active')) {\n      addWatchedMarkup();\n    }\n\n    refs.modal.classList.toggle('is-hidden');\n  }\n  window.removeEventListener('keydown', onEscapeKeyPress);\n}\nmodalClose();\n\n// Функция создания объекта жанров\nfunction addGenre() {\n  const genre = JSON.parse(localStorage.getItem('Genre'));\n\n  const genreId = genre.flatMap(el => el.id);\n  const genreName = genre.flatMap(el => el.name);\n  const genreObj = genreId.reduce(\n    (acc, id, i) => ({ ...acc, [id]: genreName[i] }),\n    {}\n  );\n\n  return genreObj;\n}\naddGenre();\n\n//закриття по бекдропу та Esc\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', onBackdropClick);\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    document.body.style.overflow = 'auto';\n    document.querySelector('[data-modal]').classList.toggle('is-hidden');\n    //console.log('close');\n    if (queueBtn.classList.contains('library_btn--active')) {\n      addQueuedMarkup();\n    }\n    if (watchBtn.classList.contains('library_btn--active')) {\n      addWatchedMarkup();\n    }\n  }\n  window.removeEventListener('keydown', onEscapeKeyPress);\n}\n\nfunction onEscapeKeyPress(event) {\n  // console.log(event.code);\n  document.body.style.overflow = 'auto';\n  if (event.code === 'Escape') {\n    document.querySelector('[data-modal]').classList.toggle('is-hidden');\n    console.log('close');\n    if (queueBtn.classList.contains('library_btn--active')) {\n      addQueuedMarkup();\n    }\n    if (watchBtn.classList.contains('library_btn--active')) {\n      addWatchedMarkup();\n    }\n    window.removeEventListener('keydown', onEscapeKeyPress);\n  }\n}\n","import addWatchedMarkup from './js/page-watched';\naddWatchedMarkup();\nimport './js/queue-watched-modal';\nimport './js/lightSwitch';\nimport './js/btn-up';\n\n"],"names":["parcelRequire","register","JSON","parse","$lyvUQ","$d566b5652d63c73d$var$imgNotFound","$parcel$interopDefault","URL","resolve","import","meta","url","toString","$d566b5652d63c73d$export$64173803f27c2a58","document","querySelector","innerHTML","$4b16942bda54168a$var$btnWatched","$4b16942bda54168a$var$btnQueue","$4b16942bda54168a$var$sectionEl","$4b16942bda54168a$export$2e2bcd8739ae039","markupArr","localStorage","getItem","markupArrParse","classList","add","remove","length","strokeMarkup","default","addEventListener","$c46dc8afec212000$var$library","$c46dc8afec212000$var$watchedBtn","$c46dc8afec212000$var$queueBtn","$c46dc8afec212000$export$2e2bcd8739ae039","queuedMovies","$fe75364d63b4e8d3$exports","$168feeaaa6bbf391$var$currentMovies","$168feeaaa6bbf391$var$queueBtn","$168feeaaa6bbf391$var$watchBtn","$168feeaaa6bbf391$var$addGenre","genre","genreId","flatMap","el","id","genreName","name","reduce","acc","i","console","log","refs","openModalCard","modal","modalContainer","evt","body","style","overflow","filmCard","target","closest","toggle","window","$168feeaaa6bbf391$var$onEscapeKeyPress","filmId","Number","dataset","currentFilm","find","genresArr","genre_ids","genresObj","genresFilm","map","push","imgUrl","poster_path","title","vote","vote_average","toFixed","votes","vote_count","popularity","join","about","overview","markup","modalMarkup","$fQz6f","$168feeaaa6bbf391$var$modalOpen","closeModalBtn","contains","removeEventListener","$168feeaaa6bbf391$var$modalClose","event","code","currentTarget"],"version":3,"file":"library.79dd1b23.js.map"}